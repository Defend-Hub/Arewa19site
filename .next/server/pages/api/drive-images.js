"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/drive-images";
exports.ids = ["pages/api/drive-images"];
exports.modules = {

/***/ "googleapis":
/*!*****************************!*\
  !*** external "googleapis" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("googleapis");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdrive-images&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdrive-images.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdrive-images&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdrive-images.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_drive_images_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\drive-images.js */ \"(api)/./pages/api/drive-images.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_drive_images_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_drive_images_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/drive-images\",\n        pathname: \"/api/drive-images\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_drive_images_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmRyaXZlLWltYWdlcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDZHJpdmUtaW1hZ2VzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzBEO0FBQzFEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXJld2ExOS1uZXh0anMvPzUwOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxkcml2ZS1pbWFnZXMuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kcml2ZS1pbWFnZXNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kcml2ZS1pbWFnZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdrive-images&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdrive-images.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/drive-images.js":
/*!***********************************!*\
  !*** ./pages/api/drive-images.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! googleapis */ \"googleapis\");\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(googleapis__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// Configure Google Drive API\nconst configureGoogleDrive = ()=>{\n    try {\n        // First try to use environment variables if available\n        if (process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL && process.env.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY) {\n            console.log(\"Using environment variables for Google Drive authentication\");\n            const auth = new googleapis__WEBPACK_IMPORTED_MODULE_0__.google.auth.JWT(process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL, null, process.env.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"), [\n                \"https://www.googleapis.com/auth/drive.readonly\"\n            ]);\n            return googleapis__WEBPACK_IMPORTED_MODULE_0__.google.drive({\n                version: \"v3\",\n                auth\n            });\n        }\n        // If environment variables are not available, try to use credential file\n        const credentialPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"pages\", \"api\", \"striking-effort-439520-v9-cf3e883365bc.json\");\n        if (fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(credentialPath)) {\n            console.log(\"Using credential file for Google Drive authentication\");\n            const auth = new googleapis__WEBPACK_IMPORTED_MODULE_0__.google.auth.GoogleAuth({\n                keyFile: credentialPath,\n                scopes: [\n                    \"https://www.googleapis.com/auth/drive.readonly\"\n                ]\n            });\n            return googleapis__WEBPACK_IMPORTED_MODULE_0__.google.drive({\n                version: \"v3\",\n                auth\n            });\n        }\n        throw new Error(\"No valid Google Drive authentication credentials found\");\n    } catch (error) {\n        console.error(\"Error configuring Google Drive:\", error);\n        throw error;\n    }\n};\nasync function handler(req, res) {\n    try {\n        // Get folder ID from query parameter or use default\n        // Hardcoded default folder ID as fallback - replace with your actual Google Drive folder ID\n        const DEFAULT_FOLDER_ID = \"1HF_7yMujtVKz6jP3KD-cIEYZZqXTGcBu\";\n        const folderId = req.query.folderId || process.env.GOOGLE_DRIVE_FOLDER_ID || DEFAULT_FOLDER_ID;\n        const stateFilter = req.query.state || \"all\";\n        if (!folderId) {\n            return res.status(400).json({\n                error: \"No folder ID provided\"\n            });\n        }\n        const drive = configureGoogleDrive();\n        // List files in the specified folder\n        const response = await drive.files.list({\n            q: `'${folderId}' in parents and trashed = false and mimeType contains 'image/'`,\n            fields: \"files(id, name, thumbnailLink, webContentLink, imageMediaMetadata, description)\",\n            orderBy: \"createdTime desc\",\n            pageSize: 100\n        });\n        const files = response.data.files;\n        console.log(`Found ${files.length} images in Google Drive folder`);\n        // Process files to extract metadata and state information\n        const processedFiles = files.map((file)=>{\n            // Try to extract state from file description or name\n            let state = \"unknown\";\n            if (file.description) {\n                // Look for state tag in description (e.g., \"state: kaduna\")\n                const stateMatch = file.description.toLowerCase().match(/state:\\s*(\\w+)/);\n                if (stateMatch) {\n                    state = stateMatch[1].toLowerCase();\n                }\n            } else {\n                // Try to extract state from filename\n                const stateList = [\n                    \"kaduna\",\n                    \"kano\",\n                    \"borno\",\n                    \"fct\",\n                    \"katsina\",\n                    \"jigawa\",\n                    \"sokoto\",\n                    \"zamfara\",\n                    \"kebbi\",\n                    \"bauchi\",\n                    \"gombe\",\n                    \"yobe\",\n                    \"adamawa\",\n                    \"taraba\",\n                    \"plateau\",\n                    \"nasarawa\",\n                    \"niger\",\n                    \"kwara\",\n                    \"kogi\"\n                ];\n                const fileName = file.name.toLowerCase();\n                for (const potentialState of stateList){\n                    if (fileName.includes(potentialState)) {\n                        state = potentialState;\n                        break;\n                    }\n                }\n            }\n            // Store all possible image URL formats to try on the frontend\n            const imageUrls = {\n                // Format 1: Direct export view link (most direct but sometimes blocked by CORS)\n                directLink: `https://drive.google.com/uc?export=view&id=${file.id}`,\n                // Format 2: If thumbnailLink exists, modify it to get a larger preview\n                // This is often the most reliable for displaying in an <img> tag\n                thumbnailUrl: file.thumbnailLink ? file.thumbnailLink.replace(/=s\\d+$/, \"=s1000\") : null,\n                // Format 3: Alternative Google Drive thumbnail format\n                altThumbnail: `https://drive.google.com/thumbnail?id=${file.id}&sz=w1000`,\n                // Format 4: Web content link if available (usually downloads the file)\n                webContentLink: file.webContentLink || null,\n                // Format 5: Googleusercontent format\n                googleusercontent: `https://lh3.googleusercontent.com/d/${file.id}=s1000`\n            };\n            // Choose the best image URL to use as primary (prioritizing the most reliable formats)\n            const imageUrl = imageUrls.thumbnailUrl || imageUrls.directLink || imageUrls.altThumbnail || imageUrls.googleusercontent || \"/assets/img/placeholder.jpg\";\n            console.log(`Processed image: ${file.name}, ID: ${file.id}, State: ${state}`);\n            return {\n                id: file.id,\n                name: file.name,\n                imageUrl,\n                thumbnailUrl: file.thumbnailLink,\n                webContentLink: file.webContentLink,\n                imageUrls,\n                state,\n                metadata: file.imageMediaMetadata || {}\n            };\n        });\n        // Filter images by state if requested\n        let filteredFiles = processedFiles;\n        if (stateFilter !== \"all\") {\n            filteredFiles = processedFiles.filter((file)=>file.state === stateFilter.toLowerCase());\n        }\n        return res.status(200).json({\n            images: filteredFiles\n        });\n    } catch (error) {\n        console.error(\"Error fetching Google Drive images:\", error);\n        return res.status(500).json({\n            error: \"Failed to fetch images from Google Drive\",\n            details: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/drive-images.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdrive-images&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdrive-images.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();